<?xml version="1.0" encoding="UTF-8"?>
<project
  xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.absa</groupId>
  <artifactId>amol-aro-parent</artifactId>
  <version>1.2</version>
  <packaging>pom</packaging>

  <name>AMOL Parent POM</name>
  <description>Parent POM for AMol Project</description>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <war.name>ROOT</war.name>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>jakarta.platform</groupId>
        <artifactId>jakarta.jakartaee-api</artifactId>
        <version>8.0.0</version>
      </dependency>
      <dependency>
        <groupId>jakarta.xml.bind</groupId>
        <artifactId>jakarta.xml.bind-api</artifactId>
        <version>2.3.3</version>
      </dependency>  
      <dependency>
        <groupId>org.eclipse.microprofile</groupId>
        <artifactId>microprofile</artifactId>
        <version>3.3</version>
        <type>pom</type>
        <exclusions><!-- Already included in jakarta.jakartaee-api above. -->
          <exclusion>
            <groupId>javax.ws.rs</groupId>
            <artifactId>javax.ws.rs-api</artifactId>
          </exclusion>
          <exclusion>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
          </exclusion>
          <exclusion>
            <groupId>javax.el</groupId>
            <artifactId>javax.el-api</artifactId>
          </exclusion>
          <exclusion>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
          </exclusion>
          <exclusion>
            <groupId>javax.json</groupId>
            <artifactId>javax.json-api</artifactId>
          </exclusion>
          <exclusion>
            <groupId>javax.interceptor</groupId>
            <artifactId>javax.interceptor-api</artifactId>
          </exclusion>
          <exclusion>
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
          </exclusion>
          <exclusion>
            <groupId>javax.json.bind</groupId>
            <artifactId>javax.json.bind-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.deltaspike.distribution</groupId>
        <artifactId>distributions-bom</artifactId>
        <version>1.9.3</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.pdfbox</groupId>
        <artifactId>pdfbox</artifactId>
        <version>2.0.19</version>
      </dependency>
      <dependency>
        <groupId>org.apache.pdfbox</groupId>
        <artifactId>pdfbox-tools</artifactId>
        <version>2.0.19</version>
      </dependency>
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>1.18.12</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>1.7.30</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse</groupId>
        <artifactId>yasson</artifactId>
        <version>1.0.7</version>
        <exclusions>
          <exclusion>
            <groupId>jakarta.json.bind</groupId>
            <artifactId>jakarta.json.bind-api</artifactId>
          </exclusion>
          <exclusion>
            <groupId>jakarta.json</groupId>
            <artifactId>jakarta.json-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>jakarta.xml.ws</groupId>
        <artifactId>jakarta.xml.ws-api</artifactId>
        <version>2.3.3</version>
      </dependency>
      <!--20200816 - this is removed from new pom -->
      <dependency>
        <groupId>jakarta.jws</groupId>
        <artifactId>jakarta.jws-api</artifactId>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>org.jvnet.jaxb2_commons</groupId>
        <artifactId>jaxb2-basics-runtime</artifactId>
        <version>0.12.0</version>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-engine</artifactId>
        <version>5.6.2</version>
      </dependency>
      <dependency>
        <groupId>org.junit.vintage</groupId>
        <artifactId>junit-vintage-engine</artifactId>
        <version>5.6.2</version>
      </dependency>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.13</version>
        <exclusions>
          <exclusion>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
          </exclusion>
        </exclusions>
      </dependency>          
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>3.3.3</version>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-junit-jupiter</artifactId>
        <version>3.3.3</version>
        <exclusions>
          <exclusion>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>io.rest-assured</groupId>
        <artifactId>rest-assured</artifactId>
        <version>4.3.1</version>
        <exclusions>
          <exclusion>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
          </exclusion>
          <exclusion>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>io.rest-assured</groupId>
        <artifactId>json-path</artifactId>
        <version>4.3.1</version>
      </dependency>
      <dependency>
        <groupId>io.rest-assured</groupId>
        <artifactId>xml-path</artifactId>
        <version>4.3.1</version>
      </dependency>
      <dependency>
        <groupId>org.arquillian.container</groupId>
        <artifactId>arquillian-chameleon-junit-container-starter</artifactId>
        <version>1.0.0.CR6</version>
        <exclusions>
          <exclusion>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.arquillian.spacelift</groupId>
        <artifactId>arquillian-spacelift</artifactId>
        <version>1.0.2</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.arquillian</groupId>
        <artifactId>arquillian-bom</artifactId>
        <scope>import</scope>
        <type>pom</type>
        <version>1.6.0.Final</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>jakarta.platform</groupId>
      <artifactId>jakarta.jakartaee-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>jakarta.xml.ws</groupId>
      <artifactId>jakarta.xml.ws-api</artifactId>
      <scope>provided</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.jvnet.jaxb2_commons</groupId>
      <artifactId>jaxb2-basics-runtime</artifactId>
      <scope>provided</scope>
    </dependency>            
    <dependency>
      <groupId>org.eclipse.microprofile</groupId>
      <artifactId>microprofile</artifactId>
      <type>pom</type>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.vintage</groupId>
      <artifactId>junit-vintage-engine</artifactId>
      <scope>test</scope>
    </dependency>  
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>          
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse</groupId>
      <artifactId>yasson</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>json-path</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>xml-path</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.junit</groupId>
      <artifactId>arquillian-junit-container</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.shrinkwrap.descriptors</groupId>
      <artifactId>shrinkwrap-descriptors-depchain</artifactId>
      <type>pom</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.arquillian.container</groupId>
      <artifactId>arquillian-chameleon-junit-container-starter</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.0.0-M5</version>
        </plugin>
        <plugin>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>3.0.0-M5</version>
          <executions>
            <execution>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
        </plugin>        
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>3.0.0-M1</version>
        </plugin>
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.9.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
         <!-- <version>2.8.2</version> -->
		 <version>3.0.0-M1</version> 
        </plugin>
        <plugin>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>3.1.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>3.0.0-M3</version>
        </plugin>
        <plugin>
          <artifactId>maven-war-plugin</artifactId>
          <version>3.3.0</version>
          <configuration>
           <!-- <warName>ROOT</warName>-->
            <warName>${war.name}</warName>
            <filteringDeploymentDescriptors>true</filteringDeploymentDescriptors>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.wildfly.plugins</groupId>
          <artifactId>wildfly-maven-plugin</artifactId>
          <version>2.0.2.Final</version>
        </plugin> 
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>jaxws-maven-plugin</artifactId>
          <version>2.6</version>
        </plugin>         
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <banDuplicatePomDependencyVersions/>
                <dependencyConvergence/>
                <reactorModuleConvergence/>
                <requireReleaseVersion/>
                <requireReleaseDeps/>
                <requireSameVersions/>
                <requirePluginVersions>
                  <phases>clean,validate,initialize,verify,generate-sources,pre-integration-test,install,deploy,site</phases>
                </requirePluginVersions>
                <requireActiveProfile>
                  <profiles>aro</profiles>
                  <message>'aro' profile not active. Make sure you have the ARO Maven 'settings.xml' file configured. (See https://absa.atlassian.net/wiki/spaces/AAE/pages/36020668/ARO+Parent+POM)</message>
                </requireActiveProfile>
                <requireProperty>
                  <property>java.runtime.name</property>
                  <regex>.*OpenJDK.*</regex>
                  <regexMessage>Only OpenJDK Java Runtime Supported</regexMessage>
                </requireProperty>
                <banDuplicateClasses>
                  <findAllDuplicates>true</findAllDuplicates>
                </banDuplicateClasses>
                <requireDepMgt>
                  <checkVersion>true</checkVersion>
                </requireDepMgt>
              </rules>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>extra-enforcer-rules</artifactId>
            <version>1.2</version>
          </dependency>
          <dependency>
            <groupId>com.ceilfors.maven.plugin</groupId>
            <artifactId>enforcer-rules</artifactId>
            <version>1.2.0</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>jaxws-maven-plugin</artifactId>
        <configuration>
          <extension>true</extension>
          <wsdlDirectory>src/main/wsdl</wsdlDirectory>
          <wsdlFiles/>
          <bindingDirectory>src/main/wsdl</bindingDirectory>
          <bindingFiles>
            <bindingFile>binding.xjc</bindingFile>
          </bindingFiles>
          <xjcArgs>
            <xjcArg>-XfixJAXB1058</xjcArg>
          </xjcArgs>
          <plugins>
            <plugin>
              <groupId>net.codesup.util</groupId>
              <artifactId>jaxb2-rich-contract-plugin</artifactId>
              <version>2.0.1</version>
            </plugin>
          </plugins>        
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.jvnet.jaxb2_commons</groupId>
            <artifactId>jaxb2-basics</artifactId>
            <version>0.12.0</version>
          </dependency>
          <dependency>
            <groupId>com.github.sabomichal</groupId>
            <artifactId>immutable-xjc-plugin</artifactId>
            <version>1.6.2</version>
          </dependency>
          <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>1.7.30</version>
          </dependency>
        </dependencies>
      </plugin>      
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>wildfly-home</id>
      <activation>
        <property><name>environment</name><value>development</value></property>
        <file>
          <exists>wildfly</exists>
        </file>
      </activation>
      <properties>
        <jboss-as.home>${wildfly.home}</jboss-as.home>
      </properties>
    </profile>
    <profile>
      <id>wildfly-start-or-download</id>
      <activation>
        <property><name>environment</name><value>development</value></property>
        <file>
          <missing>wildfly</missing>
        </file>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.wildfly.plugins</groupId>
              <artifactId>wildfly-maven-plugin</artifactId>
              <executions>
                <execution>
                  <id>start-or-download-server</id>
                  <phase>pre-integration-test</phase>
                  <goals>
                    <goal>start</goal>
                  </goals>
                  <configuration>
                    <targetDir>${project.basedir}/wildfly</targetDir>
                  </configuration>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>             
    </profile>
    <profile>
      <id>wildfly-jpa</id>
      <activation>
        <property><name>wildfly.optional.profile</name><value>jpa</value></property>
      </activation>
      <properties>
        <database>${project.artifactId}</database>
      </properties>
      <dependencyManagement>
        <dependencies>
          <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.2.14</version>
          </dependency>
        </dependencies>
      </dependencyManagement>
      <dependencies>
        <dependency>
          <groupId>org.postgresql</groupId>
          <artifactId>postgresql</artifactId>
          <scope>provided</scope>
        </dependency>
      </dependencies>      
      <build>
        <plugins>
          <plugin>
            <groupId>org.wildfly.plugins</groupId>
            <artifactId>wildfly-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>deploy-driver</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>deploy-artifact</goal>
                </goals>
                <configuration>
                  <groupId>org.postgresql</groupId>
                  <artifactId>postgresql</artifactId>
                  <name>postgresql.jar</name>
                </configuration>
              </execution>                        
              <execution>
                <id>add-datasource</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>add-resource</goal>
                </goals>
                <configuration>
                  <address>subsystem=datasources,data-source=${database}DS</address>
                  <resources>
                    <resource>
                      <addIfAbsent>true</addIfAbsent>
                      <properties>
                        <connection-url>jdbc:postgresql:${database}</connection-url>
                        <jndi-name>java:jboss/datasources/${database}DS</jndi-name>
                        <enabled>true</enabled>
                        <user-name>postgres</user-name>
                        <password>postgres</password>
                        <driver-name>postgresql.jar</driver-name>
                        <use-ccm>false</use-ccm>
                      </properties>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions> 
          </plugin>
        </plugins>      
      </build>      
    </profile>
    <profile>
      <id>wildfly</id>
      <activation>
        <property><name>environment</name><value>development</value></property>
      </activation>
      <properties>
        <wildfly.version>19.1.0.Final</wildfly.version>
        <wildfly.home>wildfly/wildfly-${wildfly.version}</wildfly.home>
    	<wildfly.deployment.filename>${war.name}.${project.packaging}</wildfly.deployment.filename>
        <wildfly.deployment.name>${war.name}.${project.packaging}</wildfly.deployment.name> 
     <!--  <wildfly.serverConfig>standalone-microprofile.xml</wildfly.serverConfig>  -->
		<wildfly.serverConfig>standalone.xml</wildfly.serverConfig>
        <arq.container.chameleon.configuration.chameleonContainerConfigurationFile>src/test/resources/containers.yml</arq.container.chameleon.configuration.chameleonContainerConfigurationFile> 
        <arq.container.chameleon.configuration.chameleonTarget>wildfly:${wildfly.version}:managed</arq.container.chameleon.configuration.chameleonTarget>
      </properties>
      <build>
        <resources>
          <resource>
            <directory>src/main/resources</directory>
            <filtering>true</filtering>
            <includes>
              <include>arquillian.xml</include>
            </includes>
          </resource>
          <resource>
            <directory>src/main/resources</directory>
            <filtering>false</filtering>
            <excludes>
              <exclude>arquillian.xml</exclude>
            </excludes>
          </resource>
        </resources>
        <plugins>
          <plugin>
            <groupId>org.wildfly.plugins</groupId>
            <artifactId>wildfly-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>undeploy</id>
                <phase>clean</phase>
                <goals>
                  <goal>undeploy</goal>
                </goals>
                <configuration>
                  <ignoreMissingDeployment>true</ignoreMissingDeployment>
                </configuration>
              </execution>
              <execution>
                <id>deploy</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>deploy-only</goal>
                </goals>
              </execution>
            </executions> 
          </plugin>
        </plugins>      
      </build>      
    </profile>
    <profile>
      <id>jdk11</id>
      <activation>
        <property><name>!fuse</name></property>
      </activation>
      <properties>
        <maven.compiler.release>11</maven.compiler.release>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>enforce-java-version</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requireJavaVersion>
                      <version>[11,12)</version>
                    </requireJavaVersion>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>      
      </build>      
    </profile>
    <profile>
      <id>fuse</id>
      <activation>
        <property><name>fuse</name></property>
      </activation>
      <properties>
	  <!--added to test if works with java 11 -->
	   <maven.compiler.release>11</maven.compiler.release>
    <!--   removing to test if works with java 11 
	<maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target> 
		   removing to test if works with java 11 -->
      </properties>
      <dependencyManagement>
        <dependencies>
         <!-- <dependency>
            <groupId>org.wildfly.camel</groupId>
            <artifactId>wildfly-camel-bom</artifactId>
            <version>11.1.0</version>
            <scope>import</scope>
            <type>pom</type>
          </dependency> -->
		 <dependency>
		<groupId>org.jboss.redhat-fuse</groupId>
		<artifactId>fuse-eap-bom</artifactId>
		<version>7.6.0.fuse-760027-redhat-00001</version>
		<type>pom</type>
		<scope>import</scope>
		</dependency>
        </dependencies>
      </dependencyManagement>
      <dependencies>
        <dependency>
          <groupId>org.apache.camel</groupId>
          <artifactId>camel-cdi</artifactId>
        <!--removed scope   20200710 as it does not bundle camel jars in war 
		<scope>provided</scope> 
		-->
        </dependency>
        <dependency>
          <groupId>org.apache.camel</groupId>
          <artifactId>camel-core</artifactId>
           <!--removed scope   20200710 as it does not bundle camel jars in war 
		<scope>provided</scope> 
		-->
        </dependency>
        <dependency>
          <groupId>org.apache.camel</groupId>
          <artifactId>camel-servlet</artifactId>
          <!--removed scope   20200710 as it does not bundle camel jars in war 
		<scope>provided</scope> 
		-->
        </dependency>
        <dependency>
          <groupId>org.apache.camel</groupId>
          <artifactId>camel-http</artifactId>
           <!--removed scope   20200710 as it does not bundle camel jars in war 
		<scope>provided</scope> 
		-->
          <exclusions>
            <exclusion>
              <groupId>javax.servlet</groupId>
              <artifactId>javax.servlet-api</artifactId>
            </exclusion>
            <exclusion>
              <groupId>commons-logging</groupId>
              <artifactId>commons-logging</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
        <dependency>
          <groupId>org.apache.camel</groupId>
          <artifactId>camel-cxf</artifactId>
         <!--removed scope   20200710 as it does not bundle camel jars in war 
		<scope>provided</scope> 
		-->
          <exclusions>
            <exclusion>
              <groupId>javax.servlet</groupId>
              <artifactId>javax.servlet-api</artifactId>
            </exclusion>
            <exclusion>
              <groupId>javax.ws.rs</groupId>
              <artifactId>javax.ws.rs-api</artifactId>
            </exclusion>
            <exclusion>
              <groupId>javax.annotation</groupId>
              <artifactId>javax.annotation-api</artifactId>
            </exclusion>
           <!--removed 20200710 -->
		  	<exclusion>
              <groupId>com.sun.activation</groupId>
              <artifactId>javax.activation</artifactId>
            </exclusion> 
            <exclusion>
              <groupId>org.apache.cxf</groupId>
              <artifactId>*</artifactId>
            </exclusion>
  <!--removed 20200710       
		<exclusion>
              <groupId>org.springframework</groupId>
              <artifactId>*</artifactId>
            </exclusion> 
            <exclusion>
              <groupId>org.apache.camel</groupId>
              <artifactId>camel-spring</artifactId>
            </exclusion>--> 
			
          </exclusions>
        </dependency>
 <!--removed scope   20200710 as its wildfly camel dependency 	
	  <dependency>
          <groupId>org.wildfly.camel</groupId>
          <artifactId>wildfly-camel-subsystem-core</artifactId>
          <scope>provided</scope>
          <exclusions>
            <exclusion>
              <groupId>org.springframework</groupId>
              <artifactId>*</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
		removed scope   20200710 as its wildfly camel dependency 	-->      
        <dependency>
          <groupId>org.apache.camel</groupId>
          <artifactId>camel-test-cdi</artifactId>
          <scope>test</scope>
          <exclusions>
            <exclusion>
              <groupId>javax.enterprise</groupId>
              <artifactId>cdi-api</artifactId>
            </exclusion>
            <exclusion>
              <groupId>javax.inject</groupId>
              <artifactId>javax.inject</artifactId>
            </exclusion>
			
			<exclusion>
              <groupId>org.jboss.spec.javax.annotation</groupId>
              <artifactId>jboss-annotations-api_1.2_spec</artifactId>
            </exclusion>		
						
          </exclusions>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
			
              <execution>
                <id>enforce-java-version</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requireJavaVersion>
					<version>[11,12)</version>
					<!-- removing to test if works with java 11
                      <version>[1.8,9)</version>
					     removing to test if works with java 11  -->
                    </requireJavaVersion>
                  </rules>
                </configuration>
              </execution>
			  
            </executions>
          </plugin>
        </plugins>      
      </build>
    </profile>
    <profile>
      <id>development</id>
      <activation>
        <property><name>environment</name><value>development</value></property>
      </activation>
      <dependencyManagement>
        <dependencies>
          <dependency>
            <groupId>org.microprofile-ext.openapi-ext</groupId>
            <artifactId>openapi-ui</artifactId>
            <version>1.1.4</version>
          </dependency>
          <dependency>
            <groupId>org.microprofile-ext.health-ext</groupId>
            <artifactId>healthprobe-system</artifactId>
            <version>1.0.5</version>
          </dependency>
          <dependency>
            <groupId>org.microprofile-ext.health-ext</groupId>
            <artifactId>healthprobe-jvm</artifactId>
            <version>1.0.5</version>
          </dependency>
          <dependency>
            <groupId>org.microprofile-ext.health-ext</groupId>
            <artifactId>health-ui</artifactId>
            <version>1.0.5</version>
          </dependency>
          <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>popper.js</artifactId>
            <version>1.14.4</version>
          </dependency>       
          <dependency>
            <groupId>org.microprofile-ext.jaxrs-ext</groupId>
            <artifactId>configurable-exception-handler</artifactId>
            <version>1.0.0</version>
          </dependency>       
          <dependency>
            <groupId>org.microprofile-ext.jaxrs-ext</groupId>
            <artifactId>beanvalidation-exception-handler</artifactId>
            <version>1.0.0</version>
          </dependency>
          <dependency>
            <groupId>org.microprofile-ext.restclient-ext</groupId>
            <artifactId>configurable-errorresponse-handler</artifactId>
            <version>1.0.0</version>
          </dependency>
        </dependencies>
      </dependencyManagement>
      <dependencies>
        <dependency>
          <groupId>org.microprofile-ext.openapi-ext</groupId>
          <artifactId>openapi-ui</artifactId>
          <scope>runtime</scope>
        </dependency>
        <dependency>
          <groupId>org.microprofile-ext.health-ext</groupId>
          <artifactId>healthprobe-system</artifactId>
          <scope>runtime</scope>
        </dependency>
        <dependency>
          <groupId>org.microprofile-ext.health-ext</groupId>
          <artifactId>healthprobe-jvm</artifactId>
          <scope>runtime</scope>
        </dependency>
        <dependency>
          <groupId>org.microprofile-ext.health-ext</groupId>
          <artifactId>health-ui</artifactId>
          <scope>runtime</scope>
        </dependency> 
        <dependency>
          <groupId>org.microprofile-ext.jaxrs-ext</groupId>
          <artifactId>configurable-exception-handler</artifactId>
          <scope>runtime</scope>
        </dependency>       
        <dependency>
          <groupId>org.microprofile-ext.jaxrs-ext</groupId>
          <artifactId>beanvalidation-exception-handler</artifactId>
          <scope>runtime</scope>
        </dependency>
        <dependency>
          <groupId>org.microprofile-ext.restclient-ext</groupId>
          <artifactId>configurable-errorresponse-handler</artifactId>
          <scope>runtime</scope>
        </dependency>          
      </dependencies>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <artifactId>maven-help-plugin</artifactId>
              <version>3.2.0</version>
            </plugin>
          </plugins>
        </pluginManagement>
        <plugins>
          <plugin>
            <artifactId>maven-help-plugin</artifactId>
            <executions>
              <execution>
                <id>show-profiles</id>
                <phase>validate</phase>
                <goals>
                  <goal>active-profiles</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>enforce-maven-version</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requireMavenVersion>
                      <version>[3.6.3]</version>
                    </requireMavenVersion>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>galleon-resources</id>
      <activation>
        <property>
          <name>environment</name><value>development</value>
        </property>
        <file>
          <missing>wildfly</missing>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-provisioning-file</id>
                <phase>initialize</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${project.build.directory}</outputDirectory>
                  <resources>
                    <resource>
                      <directory>${basedir}</directory>
                      <includes>
                        <include>provisioning.xml</include>
                      </includes>
                      <filtering>true</filtering>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>galleon</id>
      <activation>
        <property>
          <name>environment</name><value>development</value>
        </property>
        <file>
          <exists>target/provisioning.xml</exists>
        </file>
      </activation>
      <properties>
        <jboss-as.home>${wildfly.home}</jboss-as.home>
      </properties>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.jboss.galleon</groupId>
              <artifactId>galleon-maven-plugin</artifactId>
              <version>4.2.5.Final</version>
            </plugin>
          </plugins>
        </pluginManagement>
        <plugins>
          <plugin>
            <groupId>org.jboss.galleon</groupId>
            <artifactId>galleon-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>provision-server</id>
                <phase>initialize</phase>
                <goals>
                  <goal>provision-file</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <provisioning-file>${project.build.directory}/provisioning.xml</provisioning-file>
              <install-dir>${wildfly.home}</install-dir>
              <log-time>true</log-time>
            </configuration>
          </plugin>
          <plugin>
            <artifactId>maven-clean-plugin</artifactId>
            <executions>
              <execution>
                <id>clean-provisioning-file</id>
                <phase>initialize</phase>
                <goals>
                  <goal>clean</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <excludeDefaultDirectories>true</excludeDefaultDirectories>
              <filesets>
                <fileset>
                  <directory>${project.build.directory}</directory>
                  <includes>
                    <include>provisioning.xml</include>
                  </includes>
                </fileset>
              </filesets>              
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>openshift</id>
      <activation>
        <property><name>environment</name><value>!development</value></property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-war-plugin</artifactId>
            <configuration>
              <packagingExcludes>WEB-INF/lib/*.jar</packagingExcludes>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>enforce-maven-version</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requireMavenVersion>
                      <version>[3.5.0,)</version>
                    </requireMavenVersion>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>          
        </plugins>
      </build>
    </profile>
    <profile>
      <id>jax-ws</id>
      <activation>
        <file>
          <exists>src/main/wsdl</exists>
        </file>
      </activation>
      <build>
        <resources>
          <resource>
            <directory>src/main/resources</directory>
          </resource>
          <resource>
            <directory>src/main/wsdl</directory>
            <includes>
              <include>*.wsdl</include>
            </includes>
          </resource>
        </resources>
      </build>
    </profile>
    <profile>
      <id>deltaspike-data</id>
      <activation>
        <file>
          <exists>src/main/resources/META-INF/persistence.xml</exists>
        </file>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.apache.deltaspike.core</groupId>
          <artifactId>deltaspike-core-api</artifactId>
        </dependency>
        <dependency>
          <groupId>org.apache.deltaspike.core</groupId>
          <artifactId>deltaspike-core-impl</artifactId>
        </dependency>
        <dependency>
          <groupId>org.apache.deltaspike.modules</groupId>
          <artifactId>deltaspike-data-module-api</artifactId>
        </dependency>
        <dependency>
          <groupId>org.apache.deltaspike.modules</groupId>
          <artifactId>deltaspike-data-module-impl</artifactId>
        </dependency>
      </dependencies>
    </profile>
  </profiles>
</project>